/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Track1 type.
 */
public class Track1 {
    private String uri;

    /**
     * Default constructor.
     */
    public Track1() {
    }

    /**
     * Initialization constructor.
     * @param  uri  String value for uri.
     */
    public Track1(
            String uri) {
        this.uri = uri;
    }

    /**
     * Getter for Uri.
     * Spotify URI
     * @return Returns the String
     */
    @JsonGetter("uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUri() {
        return uri;
    }

    /**
     * Setter for Uri.
     * Spotify URI
     * @param uri Value for String
     */
    @JsonSetter("uri")
    public void setUri(String uri) {
        this.uri = uri;
    }

    /**
     * Converts this Track1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Track1 [" + "uri=" + uri + "]";
    }

    /**
     * Builds a new {@link Track1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Track1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .uri(getUri());
        return builder;
    }

    /**
     * Class to build instances of {@link Track1}.
     */
    public static class Builder {
        private String uri;



        /**
         * Setter for uri.
         * @param  uri  String value for uri.
         * @return Builder
         */
        public Builder uri(String uri) {
            this.uri = uri;
            return this;
        }

        /**
         * Builds a new {@link Track1} object using the set fields.
         * @return {@link Track1}
         */
        public Track1 build() {
            return new Track1(uri);
        }
    }
}
