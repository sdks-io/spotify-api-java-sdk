/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for RecommendationSeedObject type.
 */
public class RecommendationSeedObject {
    private Integer afterFilteringSize;
    private Integer afterRelinkingSize;
    private String href;
    private String id;
    private Integer initialPoolSize;
    private String type;

    /**
     * Default constructor.
     */
    public RecommendationSeedObject() {
    }

    /**
     * Initialization constructor.
     * @param  afterFilteringSize  Integer value for afterFilteringSize.
     * @param  afterRelinkingSize  Integer value for afterRelinkingSize.
     * @param  href  String value for href.
     * @param  id  String value for id.
     * @param  initialPoolSize  Integer value for initialPoolSize.
     * @param  type  String value for type.
     */
    public RecommendationSeedObject(
            Integer afterFilteringSize,
            Integer afterRelinkingSize,
            String href,
            String id,
            Integer initialPoolSize,
            String type) {
        this.afterFilteringSize = afterFilteringSize;
        this.afterRelinkingSize = afterRelinkingSize;
        this.href = href;
        this.id = id;
        this.initialPoolSize = initialPoolSize;
        this.type = type;
    }

    /**
     * Getter for AfterFilteringSize.
     * The number of tracks available after min\_\* and max\_\* filters have been applied.
     * @return Returns the Integer
     */
    @JsonGetter("afterFilteringSize")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAfterFilteringSize() {
        return afterFilteringSize;
    }

    /**
     * Setter for AfterFilteringSize.
     * The number of tracks available after min\_\* and max\_\* filters have been applied.
     * @param afterFilteringSize Value for Integer
     */
    @JsonSetter("afterFilteringSize")
    public void setAfterFilteringSize(Integer afterFilteringSize) {
        this.afterFilteringSize = afterFilteringSize;
    }

    /**
     * Getter for AfterRelinkingSize.
     * The number of tracks available after relinking for regional availability.
     * @return Returns the Integer
     */
    @JsonGetter("afterRelinkingSize")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAfterRelinkingSize() {
        return afterRelinkingSize;
    }

    /**
     * Setter for AfterRelinkingSize.
     * The number of tracks available after relinking for regional availability.
     * @param afterRelinkingSize Value for Integer
     */
    @JsonSetter("afterRelinkingSize")
    public void setAfterRelinkingSize(Integer afterRelinkingSize) {
        this.afterRelinkingSize = afterRelinkingSize;
    }

    /**
     * Getter for Href.
     * A link to the full track or artist data for this seed. For tracks this will be a link to a
     * Track Object. For artists a link to an Artist Object. For genre seeds, this value will be
     * `null`.
     * @return Returns the String
     */
    @JsonGetter("href")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHref() {
        return href;
    }

    /**
     * Setter for Href.
     * A link to the full track or artist data for this seed. For tracks this will be a link to a
     * Track Object. For artists a link to an Artist Object. For genre seeds, this value will be
     * `null`.
     * @param href Value for String
     */
    @JsonSetter("href")
    public void setHref(String href) {
        this.href = href;
    }

    /**
     * Getter for Id.
     * The id used to select this seed. This will be the same as the string used in the
     * `seed_artists`, `seed_tracks` or `seed_genres` parameter.
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The id used to select this seed. This will be the same as the string used in the
     * `seed_artists`, `seed_tracks` or `seed_genres` parameter.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for InitialPoolSize.
     * The number of recommended tracks available for this seed.
     * @return Returns the Integer
     */
    @JsonGetter("initialPoolSize")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getInitialPoolSize() {
        return initialPoolSize;
    }

    /**
     * Setter for InitialPoolSize.
     * The number of recommended tracks available for this seed.
     * @param initialPoolSize Value for Integer
     */
    @JsonSetter("initialPoolSize")
    public void setInitialPoolSize(Integer initialPoolSize) {
        this.initialPoolSize = initialPoolSize;
    }

    /**
     * Getter for Type.
     * The entity type of this seed. One of `artist`, `track` or `genre`.
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * The entity type of this seed. One of `artist`, `track` or `genre`.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Converts this RecommendationSeedObject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RecommendationSeedObject [" + "afterFilteringSize=" + afterFilteringSize
                + ", afterRelinkingSize=" + afterRelinkingSize + ", href=" + href + ", id=" + id
                + ", initialPoolSize=" + initialPoolSize + ", type=" + type + "]";
    }

    /**
     * Builds a new {@link RecommendationSeedObject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RecommendationSeedObject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .afterFilteringSize(getAfterFilteringSize())
                .afterRelinkingSize(getAfterRelinkingSize())
                .href(getHref())
                .id(getId())
                .initialPoolSize(getInitialPoolSize())
                .type(getType());
        return builder;
    }

    /**
     * Class to build instances of {@link RecommendationSeedObject}.
     */
    public static class Builder {
        private Integer afterFilteringSize;
        private Integer afterRelinkingSize;
        private String href;
        private String id;
        private Integer initialPoolSize;
        private String type;



        /**
         * Setter for afterFilteringSize.
         * @param  afterFilteringSize  Integer value for afterFilteringSize.
         * @return Builder
         */
        public Builder afterFilteringSize(Integer afterFilteringSize) {
            this.afterFilteringSize = afterFilteringSize;
            return this;
        }

        /**
         * Setter for afterRelinkingSize.
         * @param  afterRelinkingSize  Integer value for afterRelinkingSize.
         * @return Builder
         */
        public Builder afterRelinkingSize(Integer afterRelinkingSize) {
            this.afterRelinkingSize = afterRelinkingSize;
            return this;
        }

        /**
         * Setter for href.
         * @param  href  String value for href.
         * @return Builder
         */
        public Builder href(String href) {
            this.href = href;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for initialPoolSize.
         * @param  initialPoolSize  Integer value for initialPoolSize.
         * @return Builder
         */
        public Builder initialPoolSize(Integer initialPoolSize) {
            this.initialPoolSize = initialPoolSize;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Builds a new {@link RecommendationSeedObject} object using the set fields.
         * @return {@link RecommendationSeedObject}
         */
        public RecommendationSeedObject build() {
            return new RecommendationSeedObject(afterFilteringSize, afterRelinkingSize, href, id,
                    initialPoolSize, type);
        }
    }
}
