/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ManySimplifiedShows type.
 */
public class ManySimplifiedShows {
    private List<ShowBase> shows;

    /**
     * Default constructor.
     */
    public ManySimplifiedShows() {
    }

    /**
     * Initialization constructor.
     * @param  shows  List of ShowBase value for shows.
     */
    public ManySimplifiedShows(
            List<ShowBase> shows) {
        this.shows = shows;
    }

    /**
     * Getter for Shows.
     * @return Returns the List of ShowBase
     */
    @JsonGetter("shows")
    public List<ShowBase> getShows() {
        return shows;
    }

    /**
     * Setter for Shows.
     * @param shows Value for List of ShowBase
     */
    @JsonSetter("shows")
    public void setShows(List<ShowBase> shows) {
        this.shows = shows;
    }

    /**
     * Converts this ManySimplifiedShows into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ManySimplifiedShows [" + "shows=" + shows + "]";
    }

    /**
     * Builds a new {@link ManySimplifiedShows.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ManySimplifiedShows.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(shows);
        return builder;
    }

    /**
     * Class to build instances of {@link ManySimplifiedShows}.
     */
    public static class Builder {
        private List<ShowBase> shows;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  shows  List of ShowBase value for shows.
         */
        public Builder(List<ShowBase> shows) {
            this.shows = shows;
        }

        /**
         * Setter for shows.
         * @param  shows  List of ShowBase value for shows.
         * @return Builder
         */
        public Builder shows(List<ShowBase> shows) {
            this.shows = shows;
            return this;
        }

        /**
         * Builds a new {@link ManySimplifiedShows} object using the set fields.
         * @return {@link ManySimplifiedShows}
         */
        public ManySimplifiedShows build() {
            return new ManySimplifiedShows(shows);
        }
    }
}
