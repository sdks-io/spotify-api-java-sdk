/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.spotify.api.DateTimeHelper;
import java.time.LocalDateTime;

/**
 * This is a model class for PlayHistoryObject type.
 */
public class PlayHistoryObject {
    private TrackObject track;
    private LocalDateTime playedAt;
    private ContextObject context;

    /**
     * Default constructor.
     */
    public PlayHistoryObject() {
    }

    /**
     * Initialization constructor.
     * @param  track  TrackObject value for track.
     * @param  playedAt  LocalDateTime value for playedAt.
     * @param  context  ContextObject value for context.
     */
    public PlayHistoryObject(
            TrackObject track,
            LocalDateTime playedAt,
            ContextObject context) {
        this.track = track;
        this.playedAt = playedAt;
        this.context = context;
    }

    /**
     * Getter for Track.
     * The track the user listened to.
     * @return Returns the TrackObject
     */
    @JsonGetter("track")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TrackObject getTrack() {
        return track;
    }

    /**
     * Setter for Track.
     * The track the user listened to.
     * @param track Value for TrackObject
     */
    @JsonSetter("track")
    public void setTrack(TrackObject track) {
        this.track = track;
    }

    /**
     * Getter for PlayedAt.
     * The date and time the track was played.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("played_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getPlayedAt() {
        return playedAt;
    }

    /**
     * Setter for PlayedAt.
     * The date and time the track was played.
     * @param playedAt Value for LocalDateTime
     */
    @JsonSetter("played_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setPlayedAt(LocalDateTime playedAt) {
        this.playedAt = playedAt;
    }

    /**
     * Getter for Context.
     * The context the track was played from.
     * @return Returns the ContextObject
     */
    @JsonGetter("context")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ContextObject getContext() {
        return context;
    }

    /**
     * Setter for Context.
     * The context the track was played from.
     * @param context Value for ContextObject
     */
    @JsonSetter("context")
    public void setContext(ContextObject context) {
        this.context = context;
    }

    /**
     * Converts this PlayHistoryObject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PlayHistoryObject [" + "track=" + track + ", playedAt=" + playedAt + ", context="
                + context + "]";
    }

    /**
     * Builds a new {@link PlayHistoryObject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PlayHistoryObject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .track(getTrack())
                .playedAt(getPlayedAt())
                .context(getContext());
        return builder;
    }

    /**
     * Class to build instances of {@link PlayHistoryObject}.
     */
    public static class Builder {
        private TrackObject track;
        private LocalDateTime playedAt;
        private ContextObject context;



        /**
         * Setter for track.
         * @param  track  TrackObject value for track.
         * @return Builder
         */
        public Builder track(TrackObject track) {
            this.track = track;
            return this;
        }

        /**
         * Setter for playedAt.
         * @param  playedAt  LocalDateTime value for playedAt.
         * @return Builder
         */
        public Builder playedAt(LocalDateTime playedAt) {
            this.playedAt = playedAt;
            return this;
        }

        /**
         * Setter for context.
         * @param  context  ContextObject value for context.
         * @return Builder
         */
        public Builder context(ContextObject context) {
            this.context = context;
            return this;
        }

        /**
         * Builds a new {@link PlayHistoryObject} object using the set fields.
         * @return {@link PlayHistoryObject}
         */
        public PlayHistoryObject build() {
            return new PlayHistoryObject(track, playedAt, context);
        }
    }
}
