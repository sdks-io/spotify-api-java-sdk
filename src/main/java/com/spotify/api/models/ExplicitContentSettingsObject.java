/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ExplicitContentSettingsObject type.
 */
public class ExplicitContentSettingsObject {
    private Boolean filterEnabled;
    private Boolean filterLocked;

    /**
     * Default constructor.
     */
    public ExplicitContentSettingsObject() {
    }

    /**
     * Initialization constructor.
     * @param  filterEnabled  Boolean value for filterEnabled.
     * @param  filterLocked  Boolean value for filterLocked.
     */
    public ExplicitContentSettingsObject(
            Boolean filterEnabled,
            Boolean filterLocked) {
        this.filterEnabled = filterEnabled;
        this.filterLocked = filterLocked;
    }

    /**
     * Getter for FilterEnabled.
     * When `true`, indicates that explicit content should not be played.
     * @return Returns the Boolean
     */
    @JsonGetter("filter_enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getFilterEnabled() {
        return filterEnabled;
    }

    /**
     * Setter for FilterEnabled.
     * When `true`, indicates that explicit content should not be played.
     * @param filterEnabled Value for Boolean
     */
    @JsonSetter("filter_enabled")
    public void setFilterEnabled(Boolean filterEnabled) {
        this.filterEnabled = filterEnabled;
    }

    /**
     * Getter for FilterLocked.
     * When `true`, indicates that the explicit content setting is locked and can't be changed by
     * the user.
     * @return Returns the Boolean
     */
    @JsonGetter("filter_locked")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getFilterLocked() {
        return filterLocked;
    }

    /**
     * Setter for FilterLocked.
     * When `true`, indicates that the explicit content setting is locked and can't be changed by
     * the user.
     * @param filterLocked Value for Boolean
     */
    @JsonSetter("filter_locked")
    public void setFilterLocked(Boolean filterLocked) {
        this.filterLocked = filterLocked;
    }

    /**
     * Converts this ExplicitContentSettingsObject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ExplicitContentSettingsObject [" + "filterEnabled=" + filterEnabled
                + ", filterLocked=" + filterLocked + "]";
    }

    /**
     * Builds a new {@link ExplicitContentSettingsObject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ExplicitContentSettingsObject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .filterEnabled(getFilterEnabled())
                .filterLocked(getFilterLocked());
        return builder;
    }

    /**
     * Class to build instances of {@link ExplicitContentSettingsObject}.
     */
    public static class Builder {
        private Boolean filterEnabled;
        private Boolean filterLocked;



        /**
         * Setter for filterEnabled.
         * @param  filterEnabled  Boolean value for filterEnabled.
         * @return Builder
         */
        public Builder filterEnabled(Boolean filterEnabled) {
            this.filterEnabled = filterEnabled;
            return this;
        }

        /**
         * Setter for filterLocked.
         * @param  filterLocked  Boolean value for filterLocked.
         * @return Builder
         */
        public Builder filterLocked(Boolean filterLocked) {
            this.filterLocked = filterLocked;
            return this;
        }

        /**
         * Builds a new {@link ExplicitContentSettingsObject} object using the set fields.
         * @return {@link ExplicitContentSettingsObject}
         */
        public ExplicitContentSettingsObject build() {
            return new ExplicitContentSettingsObject(filterEnabled, filterLocked);
        }
    }
}
