/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for MePlayerRequest type.
 */
public class MePlayerRequest {
    private List<String> deviceIds;
    private Boolean play;

    /**
     * Default constructor.
     */
    public MePlayerRequest() {
    }

    /**
     * Initialization constructor.
     * @param  deviceIds  List of String value for deviceIds.
     * @param  play  Boolean value for play.
     */
    public MePlayerRequest(
            List<String> deviceIds,
            Boolean play) {
        this.deviceIds = deviceIds;
        this.play = play;
    }

    /**
     * Getter for DeviceIds.
     * A JSON array containing the ID of the device on which playback should be
     * started/transferred.&lt;br/&gt;For example:`{device_ids:["74ASZWbe4lXaubB36ztrGX"]}`&lt;br/&gt;_**Note**:
     * Although an array is accepted, only a single device_id is currently supported. Supplying more
     * than one will return `400 Bad Request`_
     * @return Returns the List of String
     */
    @JsonGetter("device_ids")
    public List<String> getDeviceIds() {
        return deviceIds;
    }

    /**
     * Setter for DeviceIds.
     * A JSON array containing the ID of the device on which playback should be
     * started/transferred.&lt;br/&gt;For example:`{device_ids:["74ASZWbe4lXaubB36ztrGX"]}`&lt;br/&gt;_**Note**:
     * Although an array is accepted, only a single device_id is currently supported. Supplying more
     * than one will return `400 Bad Request`_
     * @param deviceIds Value for List of String
     */
    @JsonSetter("device_ids")
    public void setDeviceIds(List<String> deviceIds) {
        this.deviceIds = deviceIds;
    }

    /**
     * Getter for Play.
     * **true**: ensure playback happens on new device.&lt;br/&gt;**false** or not provided: keep the
     * current playback state.
     * @return Returns the Boolean
     */
    @JsonGetter("play")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPlay() {
        return play;
    }

    /**
     * Setter for Play.
     * **true**: ensure playback happens on new device.&lt;br/&gt;**false** or not provided: keep the
     * current playback state.
     * @param play Value for Boolean
     */
    @JsonSetter("play")
    public void setPlay(Boolean play) {
        this.play = play;
    }

    /**
     * Converts this MePlayerRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MePlayerRequest [" + "deviceIds=" + deviceIds + ", play=" + play + "]";
    }

    /**
     * Builds a new {@link MePlayerRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MePlayerRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(deviceIds)
                .play(getPlay());
        return builder;
    }

    /**
     * Class to build instances of {@link MePlayerRequest}.
     */
    public static class Builder {
        private List<String> deviceIds;
        private Boolean play;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  deviceIds  List of String value for deviceIds.
         */
        public Builder(List<String> deviceIds) {
            this.deviceIds = deviceIds;
        }

        /**
         * Setter for deviceIds.
         * @param  deviceIds  List of String value for deviceIds.
         * @return Builder
         */
        public Builder deviceIds(List<String> deviceIds) {
            this.deviceIds = deviceIds;
            return this;
        }

        /**
         * Setter for play.
         * @param  play  Boolean value for play.
         * @return Builder
         */
        public Builder play(Boolean play) {
            this.play = play;
            return this;
        }

        /**
         * Builds a new {@link MePlayerRequest} object using the set fields.
         * @return {@link MePlayerRequest}
         */
        public MePlayerRequest build() {
            return new MePlayerRequest(deviceIds, play);
        }
    }
}
