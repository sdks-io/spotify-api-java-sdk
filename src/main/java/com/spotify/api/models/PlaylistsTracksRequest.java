/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for PlaylistsTracksRequest type.
 */
public class PlaylistsTracksRequest {
    private List<String> uris;
    private Integer position;

    /**
     * Default constructor.
     */
    public PlaylistsTracksRequest() {
    }

    /**
     * Initialization constructor.
     * @param  uris  List of String value for uris.
     * @param  position  Integer value for position.
     */
    public PlaylistsTracksRequest(
            List<String> uris,
            Integer position) {
        this.uris = uris;
        this.position = position;
    }

    /**
     * Getter for Uris.
     * A JSON array of the [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) to add.
     * For example: `{"uris":
     * ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:1301WleyT98MSxVHPZCA6M",
     * "spotify:episode:512ojhOuo1ktJprKbVcKyQ"]}`&lt;br/&gt;A maximum of 100 items can be added in one
     * request. _**Note**: if the `uris` parameter is present in the query string, any URIs listed
     * here in the body will be ignored._
     * @return Returns the List of String
     */
    @JsonGetter("uris")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getUris() {
        return uris;
    }

    /**
     * Setter for Uris.
     * A JSON array of the [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) to add.
     * For example: `{"uris":
     * ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:1301WleyT98MSxVHPZCA6M",
     * "spotify:episode:512ojhOuo1ktJprKbVcKyQ"]}`&lt;br/&gt;A maximum of 100 items can be added in one
     * request. _**Note**: if the `uris` parameter is present in the query string, any URIs listed
     * here in the body will be ignored._
     * @param uris Value for List of String
     */
    @JsonSetter("uris")
    public void setUris(List<String> uris) {
        this.uris = uris;
    }

    /**
     * Getter for Position.
     * The position to insert the items, a zero-based index. For example, to insert the items in the
     * first position: `position=0` ; to insert the items in the third position: `position=2`. If
     * omitted, the items will be appended to the playlist. Items are added in the order they appear
     * in the uris array. For example: `{"uris":
     * ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:1301WleyT98MSxVHPZCA6M"], "position":
     * 3}`
     * @return Returns the Integer
     */
    @JsonGetter("position")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPosition() {
        return position;
    }

    /**
     * Setter for Position.
     * The position to insert the items, a zero-based index. For example, to insert the items in the
     * first position: `position=0` ; to insert the items in the third position: `position=2`. If
     * omitted, the items will be appended to the playlist. Items are added in the order they appear
     * in the uris array. For example: `{"uris":
     * ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh","spotify:track:1301WleyT98MSxVHPZCA6M"], "position":
     * 3}`
     * @param position Value for Integer
     */
    @JsonSetter("position")
    public void setPosition(Integer position) {
        this.position = position;
    }

    /**
     * Converts this PlaylistsTracksRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PlaylistsTracksRequest [" + "uris=" + uris + ", position=" + position + "]";
    }

    /**
     * Builds a new {@link PlaylistsTracksRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PlaylistsTracksRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .uris(getUris())
                .position(getPosition());
        return builder;
    }

    /**
     * Class to build instances of {@link PlaylistsTracksRequest}.
     */
    public static class Builder {
        private List<String> uris;
        private Integer position;



        /**
         * Setter for uris.
         * @param  uris  List of String value for uris.
         * @return Builder
         */
        public Builder uris(List<String> uris) {
            this.uris = uris;
            return this;
        }

        /**
         * Setter for position.
         * @param  position  Integer value for position.
         * @return Builder
         */
        public Builder position(Integer position) {
            this.position = position;
            return this;
        }

        /**
         * Builds a new {@link PlaylistsTracksRequest} object using the set fields.
         * @return {@link PlaylistsTracksRequest}
         */
        public PlaylistsTracksRequest build() {
            return new PlaylistsTracksRequest(uris, position);
        }
    }
}
