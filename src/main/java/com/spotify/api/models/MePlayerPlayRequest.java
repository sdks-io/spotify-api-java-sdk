/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for MePlayerPlayRequest type.
 */
public class MePlayerPlayRequest {
    private String contextUri;
    private List<String> uris;
    private Object offset;
    private Integer positionMs;

    /**
     * Default constructor.
     */
    public MePlayerPlayRequest() {
    }

    /**
     * Initialization constructor.
     * @param  contextUri  String value for contextUri.
     * @param  uris  List of String value for uris.
     * @param  offset  Object value for offset.
     * @param  positionMs  Integer value for positionMs.
     */
    public MePlayerPlayRequest(
            String contextUri,
            List<String> uris,
            Object offset,
            Integer positionMs) {
        this.contextUri = contextUri;
        this.uris = uris;
        this.offset = offset;
        this.positionMs = positionMs;
    }

    /**
     * Getter for ContextUri.
     * Optional. Spotify URI of the context to play. Valid contexts are albums, artists &amp; playlists.
     * `{context_uri:"spotify:album:1Je1IMUlBXcx1Fz0WE7oPT"}`
     * @return Returns the String
     */
    @JsonGetter("context_uri")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContextUri() {
        return contextUri;
    }

    /**
     * Setter for ContextUri.
     * Optional. Spotify URI of the context to play. Valid contexts are albums, artists &amp; playlists.
     * `{context_uri:"spotify:album:1Je1IMUlBXcx1Fz0WE7oPT"}`
     * @param contextUri Value for String
     */
    @JsonSetter("context_uri")
    public void setContextUri(String contextUri) {
        this.contextUri = contextUri;
    }

    /**
     * Getter for Uris.
     * Optional. A JSON array of the Spotify track URIs to play. For example: `{"uris":
     * ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh", "spotify:track:1301WleyT98MSxVHPZCA6M"]}`
     * @return Returns the List of String
     */
    @JsonGetter("uris")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getUris() {
        return uris;
    }

    /**
     * Setter for Uris.
     * Optional. A JSON array of the Spotify track URIs to play. For example: `{"uris":
     * ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh", "spotify:track:1301WleyT98MSxVHPZCA6M"]}`
     * @param uris Value for List of String
     */
    @JsonSetter("uris")
    public void setUris(List<String> uris) {
        this.uris = uris;
    }

    /**
     * Getter for Offset.
     * Optional. Indicates from where in the context playback should start. Only available when
     * context_uri corresponds to an album or playlist object "position" is zero based and can’t be
     * negative. Example: `"offset": {"position": 5}` "uri" is a string representing the uri of the
     * item to start at. Example: `"offset": {"uri": "spotify:track:1301WleyT98MSxVHPZCA6M"}`
     * @return Returns the Object
     */
    @JsonGetter("offset")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getOffset() {
        return offset;
    }

    /**
     * Setter for Offset.
     * Optional. Indicates from where in the context playback should start. Only available when
     * context_uri corresponds to an album or playlist object "position" is zero based and can’t be
     * negative. Example: `"offset": {"position": 5}` "uri" is a string representing the uri of the
     * item to start at. Example: `"offset": {"uri": "spotify:track:1301WleyT98MSxVHPZCA6M"}`
     * @param offset Value for Object
     */
    @JsonSetter("offset")
    public void setOffset(Object offset) {
        this.offset = offset;
    }

    /**
     * Getter for PositionMs.
     * Indicates from what position to start playback. Must be a positive number. Passing in a
     * position that is greater than the length of the track will cause the player to start playing
     * the next song.
     * @return Returns the Integer
     */
    @JsonGetter("position_ms")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getPositionMs() {
        return positionMs;
    }

    /**
     * Setter for PositionMs.
     * Indicates from what position to start playback. Must be a positive number. Passing in a
     * position that is greater than the length of the track will cause the player to start playing
     * the next song.
     * @param positionMs Value for Integer
     */
    @JsonSetter("position_ms")
    public void setPositionMs(Integer positionMs) {
        this.positionMs = positionMs;
    }

    /**
     * Converts this MePlayerPlayRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MePlayerPlayRequest [" + "contextUri=" + contextUri + ", uris=" + uris + ", offset="
                + offset + ", positionMs=" + positionMs + "]";
    }

    /**
     * Builds a new {@link MePlayerPlayRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MePlayerPlayRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .contextUri(getContextUri())
                .uris(getUris())
                .offset(getOffset())
                .positionMs(getPositionMs());
        return builder;
    }

    /**
     * Class to build instances of {@link MePlayerPlayRequest}.
     */
    public static class Builder {
        private String contextUri;
        private List<String> uris;
        private Object offset;
        private Integer positionMs;



        /**
         * Setter for contextUri.
         * @param  contextUri  String value for contextUri.
         * @return Builder
         */
        public Builder contextUri(String contextUri) {
            this.contextUri = contextUri;
            return this;
        }

        /**
         * Setter for uris.
         * @param  uris  List of String value for uris.
         * @return Builder
         */
        public Builder uris(List<String> uris) {
            this.uris = uris;
            return this;
        }

        /**
         * Setter for offset.
         * @param  offset  Object value for offset.
         * @return Builder
         */
        public Builder offset(Object offset) {
            this.offset = offset;
            return this;
        }

        /**
         * Setter for positionMs.
         * @param  positionMs  Integer value for positionMs.
         * @return Builder
         */
        public Builder positionMs(Integer positionMs) {
            this.positionMs = positionMs;
            return this;
        }

        /**
         * Builds a new {@link MePlayerPlayRequest} object using the set fields.
         * @return {@link MePlayerPlayRequest}
         */
        public MePlayerPlayRequest build() {
            return new MePlayerPlayRequest(contextUri, uris, offset, positionMs);
        }
    }
}
