/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ManyChapters type.
 */
public class ManyChapters {
    private List<ChapterObject> chapters;

    /**
     * Default constructor.
     */
    public ManyChapters() {
    }

    /**
     * Initialization constructor.
     * @param  chapters  List of ChapterObject value for chapters.
     */
    public ManyChapters(
            List<ChapterObject> chapters) {
        this.chapters = chapters;
    }

    /**
     * Getter for Chapters.
     * @return Returns the List of ChapterObject
     */
    @JsonGetter("chapters")
    public List<ChapterObject> getChapters() {
        return chapters;
    }

    /**
     * Setter for Chapters.
     * @param chapters Value for List of ChapterObject
     */
    @JsonSetter("chapters")
    public void setChapters(List<ChapterObject> chapters) {
        this.chapters = chapters;
    }

    /**
     * Converts this ManyChapters into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ManyChapters [" + "chapters=" + chapters + "]";
    }

    /**
     * Builds a new {@link ManyChapters.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ManyChapters.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(chapters);
        return builder;
    }

    /**
     * Class to build instances of {@link ManyChapters}.
     */
    public static class Builder {
        private List<ChapterObject> chapters;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  chapters  List of ChapterObject value for chapters.
         */
        public Builder(List<ChapterObject> chapters) {
            this.chapters = chapters;
        }

        /**
         * Setter for chapters.
         * @param  chapters  List of ChapterObject value for chapters.
         * @return Builder
         */
        public Builder chapters(List<ChapterObject> chapters) {
            this.chapters = chapters;
            return this;
        }

        /**
         * Builds a new {@link ManyChapters} object using the set fields.
         * @return {@link ManyChapters}
         */
        public ManyChapters build() {
            return new ManyChapters(chapters);
        }
    }
}
