/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ImageObject type.
 */
public class ImageObject {
    private String url;
    private Integer height;
    private Integer width;

    /**
     * Default constructor.
     */
    public ImageObject() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  height  Integer value for height.
     * @param  width  Integer value for width.
     */
    public ImageObject(
            String url,
            Integer height,
            Integer width) {
        this.url = url;
        this.height = height;
        this.width = width;
    }

    /**
     * Getter for Url.
     * The source URL of the image.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * The source URL of the image.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Height.
     * The image height in pixels.
     * @return Returns the Integer
     */
    @JsonGetter("height")
    public Integer getHeight() {
        return height;
    }

    /**
     * Setter for Height.
     * The image height in pixels.
     * @param height Value for Integer
     */
    @JsonSetter("height")
    public void setHeight(Integer height) {
        this.height = height;
    }

    /**
     * Getter for Width.
     * The image width in pixels.
     * @return Returns the Integer
     */
    @JsonGetter("width")
    public Integer getWidth() {
        return width;
    }

    /**
     * Setter for Width.
     * The image width in pixels.
     * @param width Value for Integer
     */
    @JsonSetter("width")
    public void setWidth(Integer width) {
        this.width = width;
    }

    /**
     * Converts this ImageObject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ImageObject [" + "url=" + url + ", height=" + height + ", width=" + width + "]";
    }

    /**
     * Builds a new {@link ImageObject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ImageObject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(url, height, width);
        return builder;
    }

    /**
     * Class to build instances of {@link ImageObject}.
     */
    public static class Builder {
        private String url;
        private Integer height;
        private Integer width;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  url  String value for url.
         * @param  height  Integer value for height.
         * @param  width  Integer value for width.
         */
        public Builder(String url, Integer height, Integer width) {
            this.url = url;
            this.height = height;
            this.width = width;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for height.
         * @param  height  Integer value for height.
         * @return Builder
         */
        public Builder height(Integer height) {
            this.height = height;
            return this;
        }

        /**
         * Setter for width.
         * @param  width  Integer value for width.
         * @return Builder
         */
        public Builder width(Integer width) {
            this.width = width;
            return this;
        }

        /**
         * Builds a new {@link ImageObject} object using the set fields.
         * @return {@link ImageObject}
         */
        public ImageObject build() {
            return new ImageObject(url, height, width);
        }
    }
}
