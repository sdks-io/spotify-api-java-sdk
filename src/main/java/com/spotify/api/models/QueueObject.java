/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for QueueObject type.
 */
public class QueueObject {
    private Object currentlyPlaying;
    private List<Object> queue;

    /**
     * Default constructor.
     */
    public QueueObject() {
    }

    /**
     * Initialization constructor.
     * @param  currentlyPlaying  Object value for currentlyPlaying.
     * @param  queue  List of Object value for queue.
     */
    public QueueObject(
            Object currentlyPlaying,
            List<Object> queue) {
        this.currentlyPlaying = currentlyPlaying;
        this.queue = queue;
    }

    /**
     * Getter for CurrentlyPlaying.
     * The currently playing track or episode. Can be `null`.
     * @return Returns the Object
     */
    @JsonGetter("currently_playing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getCurrentlyPlaying() {
        return currentlyPlaying;
    }

    /**
     * Setter for CurrentlyPlaying.
     * The currently playing track or episode. Can be `null`.
     * @param currentlyPlaying Value for Object
     */
    @JsonSetter("currently_playing")
    public void setCurrentlyPlaying(Object currentlyPlaying) {
        this.currentlyPlaying = currentlyPlaying;
    }

    /**
     * Getter for Queue.
     * The tracks or episodes in the queue. Can be empty.
     * @return Returns the List of Object
     */
    @JsonGetter("queue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Object> getQueue() {
        return queue;
    }

    /**
     * Setter for Queue.
     * The tracks or episodes in the queue. Can be empty.
     * @param queue Value for List of Object
     */
    @JsonSetter("queue")
    public void setQueue(List<Object> queue) {
        this.queue = queue;
    }

    /**
     * Converts this QueueObject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "QueueObject [" + "currentlyPlaying=" + currentlyPlaying + ", queue=" + queue + "]";
    }

    /**
     * Builds a new {@link QueueObject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link QueueObject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .currentlyPlaying(getCurrentlyPlaying())
                .queue(getQueue());
        return builder;
    }

    /**
     * Class to build instances of {@link QueueObject}.
     */
    public static class Builder {
        private Object currentlyPlaying;
        private List<Object> queue;



        /**
         * Setter for currentlyPlaying.
         * @param  currentlyPlaying  Object value for currentlyPlaying.
         * @return Builder
         */
        public Builder currentlyPlaying(Object currentlyPlaying) {
            this.currentlyPlaying = currentlyPlaying;
            return this;
        }

        /**
         * Setter for queue.
         * @param  queue  List of Object value for queue.
         * @return Builder
         */
        public Builder queue(List<Object> queue) {
            this.queue = queue;
            return this;
        }

        /**
         * Builds a new {@link QueueObject} object using the set fields.
         * @return {@link QueueObject}
         */
        public QueueObject build() {
            return new QueueObject(currentlyPlaying, queue);
        }
    }
}
