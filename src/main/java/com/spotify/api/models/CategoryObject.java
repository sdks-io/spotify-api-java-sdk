/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for CategoryObject type.
 */
public class CategoryObject {
    private String href;
    private List<ImageObject> icons;
    private String id;
    private String name;

    /**
     * Default constructor.
     */
    public CategoryObject() {
    }

    /**
     * Initialization constructor.
     * @param  href  String value for href.
     * @param  icons  List of ImageObject value for icons.
     * @param  id  String value for id.
     * @param  name  String value for name.
     */
    public CategoryObject(
            String href,
            List<ImageObject> icons,
            String id,
            String name) {
        this.href = href;
        this.icons = icons;
        this.id = id;
        this.name = name;
    }

    /**
     * Getter for Href.
     * A link to the Web API endpoint returning full details of the category.
     * @return Returns the String
     */
    @JsonGetter("href")
    public String getHref() {
        return href;
    }

    /**
     * Setter for Href.
     * A link to the Web API endpoint returning full details of the category.
     * @param href Value for String
     */
    @JsonSetter("href")
    public void setHref(String href) {
        this.href = href;
    }

    /**
     * Getter for Icons.
     * The category icon, in various sizes.
     * @return Returns the List of ImageObject
     */
    @JsonGetter("icons")
    public List<ImageObject> getIcons() {
        return icons;
    }

    /**
     * Setter for Icons.
     * The category icon, in various sizes.
     * @param icons Value for List of ImageObject
     */
    @JsonSetter("icons")
    public void setIcons(List<ImageObject> icons) {
        this.icons = icons;
    }

    /**
     * Getter for Id.
     * The [Spotify category ID](/documentation/web-api/concepts/spotify-uris-ids) of the category.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The [Spotify category ID](/documentation/web-api/concepts/spotify-uris-ids) of the category.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * The name of the category.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the category.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Converts this CategoryObject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CategoryObject [" + "href=" + href + ", icons=" + icons + ", id=" + id + ", name="
                + name + "]";
    }

    /**
     * Builds a new {@link CategoryObject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CategoryObject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(href, icons, id, name);
        return builder;
    }

    /**
     * Class to build instances of {@link CategoryObject}.
     */
    public static class Builder {
        private String href;
        private List<ImageObject> icons;
        private String id;
        private String name;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  href  String value for href.
         * @param  icons  List of ImageObject value for icons.
         * @param  id  String value for id.
         * @param  name  String value for name.
         */
        public Builder(String href, List<ImageObject> icons, String id, String name) {
            this.href = href;
            this.icons = icons;
            this.id = id;
            this.name = name;
        }

        /**
         * Setter for href.
         * @param  href  String value for href.
         * @return Builder
         */
        public Builder href(String href) {
            this.href = href;
            return this;
        }

        /**
         * Setter for icons.
         * @param  icons  List of ImageObject value for icons.
         * @return Builder
         */
        public Builder icons(List<ImageObject> icons) {
            this.icons = icons;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Builds a new {@link CategoryObject} object using the set fields.
         * @return {@link CategoryObject}
         */
        public CategoryObject build() {
            return new CategoryObject(href, icons, id, name);
        }
    }
}
