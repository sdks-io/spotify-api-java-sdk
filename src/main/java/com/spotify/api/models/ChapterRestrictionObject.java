/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ChapterRestrictionObject type.
 */
public class ChapterRestrictionObject {
    private String reason;

    /**
     * Default constructor.
     */
    public ChapterRestrictionObject() {
    }

    /**
     * Initialization constructor.
     * @param  reason  String value for reason.
     */
    public ChapterRestrictionObject(
            String reason) {
        this.reason = reason;
    }

    /**
     * Getter for Reason.
     * The reason for the restriction. Supported values: - `market` - The content item is not
     * available in the given market. - `product` - The content item is not available for the user's
     * subscription type. - `explicit` - The content item is explicit and the user's account is set
     * to not play explicit content. - `payment_required` - Payment is required to play the content
     * item. Additional reasons may be added in the future. **Note**: If you use this field, make
     * sure that your application safely handles unknown values.
     * @return Returns the String
     */
    @JsonGetter("reason")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getReason() {
        return reason;
    }

    /**
     * Setter for Reason.
     * The reason for the restriction. Supported values: - `market` - The content item is not
     * available in the given market. - `product` - The content item is not available for the user's
     * subscription type. - `explicit` - The content item is explicit and the user's account is set
     * to not play explicit content. - `payment_required` - Payment is required to play the content
     * item. Additional reasons may be added in the future. **Note**: If you use this field, make
     * sure that your application safely handles unknown values.
     * @param reason Value for String
     */
    @JsonSetter("reason")
    public void setReason(String reason) {
        this.reason = reason;
    }

    /**
     * Converts this ChapterRestrictionObject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ChapterRestrictionObject [" + "reason=" + reason + "]";
    }

    /**
     * Builds a new {@link ChapterRestrictionObject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ChapterRestrictionObject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .reason(getReason());
        return builder;
    }

    /**
     * Class to build instances of {@link ChapterRestrictionObject}.
     */
    public static class Builder {
        private String reason;



        /**
         * Setter for reason.
         * @param  reason  String value for reason.
         * @return Builder
         */
        public Builder reason(String reason) {
            this.reason = reason;
            return this;
        }

        /**
         * Builds a new {@link ChapterRestrictionObject} object using the set fields.
         * @return {@link ChapterRestrictionObject}
         */
        public ChapterRestrictionObject build() {
            return new ChapterRestrictionObject(reason);
        }
    }
}
