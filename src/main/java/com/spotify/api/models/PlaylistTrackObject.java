/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.spotify.api.DateTimeHelper;
import java.time.LocalDateTime;

/**
 * This is a model class for PlaylistTrackObject type.
 */
public class PlaylistTrackObject {
    private LocalDateTime addedAt;
    private PlaylistUserObject addedBy;
    private Boolean isLocal;
    private Object track;

    /**
     * Default constructor.
     */
    public PlaylistTrackObject() {
    }

    /**
     * Initialization constructor.
     * @param  addedAt  LocalDateTime value for addedAt.
     * @param  addedBy  PlaylistUserObject value for addedBy.
     * @param  isLocal  Boolean value for isLocal.
     * @param  track  Object value for track.
     */
    public PlaylistTrackObject(
            LocalDateTime addedAt,
            PlaylistUserObject addedBy,
            Boolean isLocal,
            Object track) {
        this.addedAt = addedAt;
        this.addedBy = addedBy;
        this.isLocal = isLocal;
        this.track = track;
    }

    /**
     * Getter for AddedAt.
     * The date and time the track or episode was added. _**Note**: some very old playlists may
     * return `null` in this field._
     * @return Returns the LocalDateTime
     */
    @JsonGetter("added_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getAddedAt() {
        return addedAt;
    }

    /**
     * Setter for AddedAt.
     * The date and time the track or episode was added. _**Note**: some very old playlists may
     * return `null` in this field._
     * @param addedAt Value for LocalDateTime
     */
    @JsonSetter("added_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setAddedAt(LocalDateTime addedAt) {
        this.addedAt = addedAt;
    }

    /**
     * Getter for AddedBy.
     * The Spotify user who added the track or episode. _**Note**: some very old playlists may
     * return `null` in this field._
     * @return Returns the PlaylistUserObject
     */
    @JsonGetter("added_by")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PlaylistUserObject getAddedBy() {
        return addedBy;
    }

    /**
     * Setter for AddedBy.
     * The Spotify user who added the track or episode. _**Note**: some very old playlists may
     * return `null` in this field._
     * @param addedBy Value for PlaylistUserObject
     */
    @JsonSetter("added_by")
    public void setAddedBy(PlaylistUserObject addedBy) {
        this.addedBy = addedBy;
    }

    /**
     * Getter for IsLocal.
     * Whether this track or episode is a [local
     * file](/documentation/web-api/concepts/playlists/#local-files) or not.
     * @return Returns the Boolean
     */
    @JsonGetter("is_local")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsLocal() {
        return isLocal;
    }

    /**
     * Setter for IsLocal.
     * Whether this track or episode is a [local
     * file](/documentation/web-api/concepts/playlists/#local-files) or not.
     * @param isLocal Value for Boolean
     */
    @JsonSetter("is_local")
    public void setIsLocal(Boolean isLocal) {
        this.isLocal = isLocal;
    }

    /**
     * Getter for Track.
     * Information about the track or episode.
     * @return Returns the Object
     */
    @JsonGetter("track")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getTrack() {
        return track;
    }

    /**
     * Setter for Track.
     * Information about the track or episode.
     * @param track Value for Object
     */
    @JsonSetter("track")
    public void setTrack(Object track) {
        this.track = track;
    }

    /**
     * Converts this PlaylistTrackObject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PlaylistTrackObject [" + "addedAt=" + addedAt + ", addedBy=" + addedBy
                + ", isLocal=" + isLocal + ", track=" + track + "]";
    }

    /**
     * Builds a new {@link PlaylistTrackObject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PlaylistTrackObject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .addedAt(getAddedAt())
                .addedBy(getAddedBy())
                .isLocal(getIsLocal())
                .track(getTrack());
        return builder;
    }

    /**
     * Class to build instances of {@link PlaylistTrackObject}.
     */
    public static class Builder {
        private LocalDateTime addedAt;
        private PlaylistUserObject addedBy;
        private Boolean isLocal;
        private Object track;



        /**
         * Setter for addedAt.
         * @param  addedAt  LocalDateTime value for addedAt.
         * @return Builder
         */
        public Builder addedAt(LocalDateTime addedAt) {
            this.addedAt = addedAt;
            return this;
        }

        /**
         * Setter for addedBy.
         * @param  addedBy  PlaylistUserObject value for addedBy.
         * @return Builder
         */
        public Builder addedBy(PlaylistUserObject addedBy) {
            this.addedBy = addedBy;
            return this;
        }

        /**
         * Setter for isLocal.
         * @param  isLocal  Boolean value for isLocal.
         * @return Builder
         */
        public Builder isLocal(Boolean isLocal) {
            this.isLocal = isLocal;
            return this;
        }

        /**
         * Setter for track.
         * @param  track  Object value for track.
         * @return Builder
         */
        public Builder track(Object track) {
            this.track = track;
            return this;
        }

        /**
         * Builds a new {@link PlaylistTrackObject} object using the set fields.
         * @return {@link PlaylistTrackObject}
         */
        public PlaylistTrackObject build() {
            return new PlaylistTrackObject(addedAt, addedBy, isLocal, track);
        }
    }
}
