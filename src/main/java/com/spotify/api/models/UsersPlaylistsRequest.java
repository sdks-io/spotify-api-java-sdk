/*
 * SpotifyWebAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.spotify.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for UsersPlaylistsRequest type.
 */
public class UsersPlaylistsRequest {
    private String name;
    private Boolean mPublic;
    private Boolean collaborative;
    private String description;

    /**
     * Default constructor.
     */
    public UsersPlaylistsRequest() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  mPublic  Boolean value for mPublic.
     * @param  collaborative  Boolean value for collaborative.
     * @param  description  String value for description.
     */
    public UsersPlaylistsRequest(
            String name,
            Boolean mPublic,
            Boolean collaborative,
            String description) {
        this.name = name;
        this.mPublic = mPublic;
        this.collaborative = collaborative;
        this.description = description;
    }

    /**
     * Getter for Name.
     * The name for the new playlist, for example `"Your Coolest Playlist"`. This name does not need
     * to be unique; a user may have several playlists with the same name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name for the new playlist, for example `"Your Coolest Playlist"`. This name does not need
     * to be unique; a user may have several playlists with the same name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Public.
     * Defaults to `true`. If `true` the playlist will be public, if `false` it will be private. To
     * be able to create private playlists, the user must have granted the `playlist-modify-private`
     * [scope](/documentation/web-api/concepts/scopes/#list-of-scopes)
     * @return Returns the Boolean
     */
    @JsonGetter("public")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPublic() {
        return mPublic;
    }

    /**
     * Setter for Public.
     * Defaults to `true`. If `true` the playlist will be public, if `false` it will be private. To
     * be able to create private playlists, the user must have granted the `playlist-modify-private`
     * [scope](/documentation/web-api/concepts/scopes/#list-of-scopes)
     * @param mPublic Value for Boolean
     */
    @JsonSetter("public")
    public void setPublic(Boolean mPublic) {
        this.mPublic = mPublic;
    }

    /**
     * Getter for Collaborative.
     * Defaults to `false`. If `true` the playlist will be collaborative. _**Note**: to create a
     * collaborative playlist you must also set `public` to `false`. To create collaborative
     * playlists you must have granted `playlist-modify-private` and `playlist-modify-public`
     * [scopes](/documentation/web-api/concepts/scopes/#list-of-scopes)._
     * @return Returns the Boolean
     */
    @JsonGetter("collaborative")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getCollaborative() {
        return collaborative;
    }

    /**
     * Setter for Collaborative.
     * Defaults to `false`. If `true` the playlist will be collaborative. _**Note**: to create a
     * collaborative playlist you must also set `public` to `false`. To create collaborative
     * playlists you must have granted `playlist-modify-private` and `playlist-modify-public`
     * [scopes](/documentation/web-api/concepts/scopes/#list-of-scopes)._
     * @param collaborative Value for Boolean
     */
    @JsonSetter("collaborative")
    public void setCollaborative(Boolean collaborative) {
        this.collaborative = collaborative;
    }

    /**
     * Getter for Description.
     * value for playlist description as displayed in Spotify Clients and in the Web API.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * value for playlist description as displayed in Spotify Clients and in the Web API.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Converts this UsersPlaylistsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UsersPlaylistsRequest [" + "name=" + name + ", mPublic=" + mPublic
                + ", collaborative=" + collaborative + ", description=" + description + "]";
    }

    /**
     * Builds a new {@link UsersPlaylistsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UsersPlaylistsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name)
                .mPublic(getPublic())
                .collaborative(getCollaborative())
                .description(getDescription());
        return builder;
    }

    /**
     * Class to build instances of {@link UsersPlaylistsRequest}.
     */
    public static class Builder {
        private String name;
        private Boolean mPublic;
        private Boolean collaborative;
        private String description;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         */
        public Builder(String name) {
            this.name = name;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for mPublic.
         * @param  mPublic  Boolean value for mPublic.
         * @return Builder
         */
        public Builder mPublic(Boolean mPublic) {
            this.mPublic = mPublic;
            return this;
        }

        /**
         * Setter for collaborative.
         * @param  collaborative  Boolean value for collaborative.
         * @return Builder
         */
        public Builder collaborative(Boolean collaborative) {
            this.collaborative = collaborative;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Builds a new {@link UsersPlaylistsRequest} object using the set fields.
         * @return {@link UsersPlaylistsRequest}
         */
        public UsersPlaylistsRequest build() {
            return new UsersPlaylistsRequest(name, mPublic, collaborative, description);
        }
    }
}
